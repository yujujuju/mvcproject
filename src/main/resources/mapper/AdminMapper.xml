<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mvcproject.mapper.AdminMapper">

    <!-- 도서VO -->
    <resultMap id="bookMap" type="BookVO">
        <id property="bookId" column="BOOK_ID"/>
        <result property="title" column="TITLE"/>
        <result property="author" column="AUTHOR"/>
        <result property="publisher" column="PUBLISHER"/>
        <result property="pubDate" column="PUB_DATE"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="imagePath" column="IMAGE_PATH"/>
    </resultMap>

    <!-- 도서요청VO -->
    <resultMap id="bookRequestMap" type="BookRequestVO">
        <id property="requestId" column="REQUEST_ID"/>
        <result property="title" column="TITLE"/>
        <result property="author" column="AUTHOR"/>
        <result property="publisher" column="PUBLISHER"/>
        <result property="userId" column="USER_ID"/>
        <result property="requestDate" column="REQUEST_DATE"/>
        <result property="status" column="STATUS"/>
        <result property="rejectReason" column="REJECT_REASON"/>
    </resultMap>

    <!-- 유저VO -->
    <resultMap id="userMap" type="UserVO">
        <id property="id" column="ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="password" column="PASSWORD"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="role" column="ROLE"/>
        <result property="lastLogin" column="LAST_LOGIN"/>
    </resultMap>

    <!-- 리뷰VO -->
    <resultMap id="reviewMap" type="ReviewVO">
        <id property="reviewId" column="REVIEW_ID" />
        <result property="bookId" column="BOOK_ID" />
        <result property="userId" column="USER_ID" />
        <result property="nickname" column="NICKNAME" />
        <result property="rating" column="RATING" />
        <result property="content" column="CONTENT" />
        <result property="createDate" column="CREATED_AT" />
        <result property="likeCount" column="LIKE_COUNT" />
        <result property="likedByUser" column="LIKED_BY_USER" />
        <result property="bookTitle" column="BOOK_TITLE" />
    </resultMap>

    <!-- 관리자용 도서 요청 전체 목록 조회 -->
    <select id="selectAllBookRequests" resultType="BookRequestVO" resultMap="bookRequestMap">
        SELECT *
            FROM (
                SELECT ROWNUM AS rn, r.*
                    FROM (
                        SELECT
                        REQUEST_ID,
                        TITLE,
                        AUTHOR,
                        PUBLISHER,
                        USER_ID,
                        REQUEST_DATE,
                        STATUS,
                        REJECT_REASON
                        FROM BOOK_REQUEST
                        ORDER BY REQUEST_DATE DESC
                        ) r
                    WHERE  <![CDATA[ ROWNUM <= #{endRow} ]]>
                     )
        WHERE <![CDATA[ rn >= #{startRow} ]]>
    </select>

    <!-- 전체 도서 요청 수 조회 -->
    <select id="getBookRequestCount" resultType="int">
        SELECT COUNT(*) FROM BOOK_REQUEST
    </select>

    <!-- 요청 도서 상세 -->
    <select id="selectBookRequestById" parameterType="int" resultMap="bookRequestMap">
        SELECT *
        FROM BOOK_REQUEST
        WHERE REQUEST_ID = #{requestId}
    </select>

    <!-- 요청 도서 승인 -->
    <update id="approveBookRequest" parameterType="int">
        UPDATE BOOK_REQUEST
        SET STATUS = '승인'
        WHERE REQUEST_ID = #{requestId}
    </update>

    <!-- 요청 도서 거절 -->
    <update id="rejectBookRequest">
        UPDATE BOOK_REQUEST
        SET STATUS = '거절',
            REJECT_REASON = #{rejectReason}
        WHERE REQUEST_ID = #{requestId}
    </update>

    <!-- 유저 목록 조회 -->
    <select id="selectUserList" resultMap="userMap" parameterType="UserVO">
        SELECT * FROM (
            SELECT ROWNUM AS rn, a.* FROM (
                SELECT USER_ID, NICKNAME, LAST_LOGIN
                    FROM USERS
                        <where>
                            <if test="searchType eq 'nickname' and keyword != null and keyword != ''">
                                AND NICKNAME LIKE '%' || #{keyword} || '%'
                            </if>
                            <if test="searchType eq 'userId' and keyword != null and keyword != ''">
                                AND USER_ID LIKE '%' || #{keyword} || '%'
                            </if>
                        </where>
                    ORDER BY LAST_LOGIN DESC
                    ) a
                WHERE <![CDATA[ ROWNUM <= #{endRow} ]]>
            )
        WHERE <![CDATA[ rn >= #{startRow} ]]>
    </select>


    <!-- 유저 카운트 -->
    <select id="getUserCount" parameterType="UserVO" resultType="int">
        SELECT COUNT(*)
        FROM USERS
        <where>
            <if test="searchType eq 'nickname' and keyword != null and keyword != ''">
                AND NICKNAME LIKE '%' || #{keyword} || '%'
            </if>
            <if test="searchType eq 'userId' and keyword != null and keyword != ''">
                AND USER_ID LIKE '%' || #{keyword} || '%'
            </if>
        </where>
    </select>

    <!-- 도서 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM REVIEW
              WHERE REVIEW_ID = #{reviewId}
    </delete>

    <select id="selectAllReviews" parameterType="reviewVO" resultMap="reviewMap">
        <![CDATA[
        SELECT * FROM (
              SELECT ROWNUM AS RN, A.* FROM
                    (
                    SELECT
                        R.REVIEW_ID,
                        R.BOOK_ID,
                        B.TITLE AS BOOK_TITLE,
                        R.USER_ID,
                        U.NICKNAME,
                        R.RATING,
                        R.CONTENT,
                        R.CREATED_AT,

                        -- 좋아요 수
                        (SELECT COUNT(*) FROM REVIEW_LIKE RL WHERE RL.REVIEW_ID = R.REVIEW_ID) AS LIKE_COUNT

                    FROM REVIEW R
                             JOIN USERS U ON R.USER_ID = U.USER_ID
                             JOIN BOOK B ON R.BOOK_ID = B.BOOK_ID
                    ORDER BY R.CREATED_AT DESC
                    ) A
              WHERE ROWNUM <= #{endRow}
          )
        WHERE RN >= #{startRow}
        ]]>
    </select>

    <select id="selectReviewCount" resultType="int">
        SELECT COUNT(*) FROM REVIEW
    </select>




</mapper>

